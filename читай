‚úÖ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞:
–°–æ–∑–¥–∞—ë—Ç —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö users.db

–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É users

–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–ü–æ–ª—É—á–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–û–±–Ω–æ–≤–ª—è–µ—Ç –∏ —É–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å–∏
 –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã:
–£—Å—Ç–∞–Ω–æ–≤–∏ —á–µ—Ä–µ–∑ NuGet:
System.Data.SQLite.Core
üíª –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ (C# Console App)
using System;
using System.Data.SQLite;

class Program
{
    static string connectionString = "Data Source=users.db;Version=3;";

    static void Main()
    {
        CreateTable();

        AddUser("–ò–≤–∞–Ω", 30);
        AddUser("–ú–∞—Ä–∏—è", 25);

        Console.WriteLine("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:");
        GetAllUsers();

        UpdateUser(1, "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", 31);
        DeleteUser(2);

        Console.WriteLine("\n–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è:");
        GetAllUsers();
    }

    static void CreateTable()
    {
        using (var conn = new SQLiteConnection(connectionString))
        {
            conn.Open();
            var cmd = new SQLiteCommand(@"
                CREATE TABLE IF NOT EXISTS users (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    name TEXT NOT NULL,
                    age INTEGER NOT NULL
                )", conn);
            cmd.ExecuteNonQuery();
        }
    }

    static void AddUser(string name, int age)
    {
        using (var conn = new SQLiteConnection(connectionString))
        {
            conn.Open();
            var cmd = new SQLiteCommand("INSERT INTO users (name, age) VALUES (@name, @age)", conn);
            cmd.Parameters.AddWithValue("@name", name);
            cmd.Parameters.AddWithValue("@age", age);
            cmd.ExecuteNonQuery();
        }
    }

    static void GetAllUsers()
    {
        using (var conn = new SQLiteConnection(connectionString))
        {
            conn.Open();
            var cmd = new SQLiteCommand("SELECT * FROM users", conn);
            using (var reader = cmd.ExecuteReader())
            {
                while (reader.Read())
                {
                    Console.WriteLine($"ID: {reader["id"]}, –ò–º—è: {reader["name"]}, –í–æ–∑—Ä–∞—Å—Ç: {reader["age"]}");
                }
            }
        }
    }

    static void UpdateUser(int id, string name, int age)
    {
        using (var conn = new SQLiteConnection(connectionString))
        {
            conn.Open();
            var cmd = new SQLiteCommand("UPDATE users SET name = @name, age = @age WHERE id = @id", conn);
            cmd.Parameters.AddWithValue("@name", name);
            cmd.Parameters.AddWithValue("@age", age);
            cmd.Parameters.AddWithValue("@id", id);
            cmd.ExecuteNonQuery();
        }
    }

    static void DeleteUser(int id)
    {
        using (var conn = new SQLiteConnection(connectionString))
        {
            conn.Open();
            var cmd = new SQLiteCommand("DELETE FROM users WHERE id = @id", conn);
            cmd.Parameters.AddWithValue("@id", id);
            cmd.ExecuteNonQuery();
        }
    }
}

üìå –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å:
–°–æ–∑–¥–∞–π Console App –≤ Visual Studio.

–£—Å—Ç–∞–Ω–æ–≤–∏ NuGet-–ø–∞–∫–µ—Ç: System.Data.SQLite.Core

–í—Å—Ç–∞–≤—å –∫–æ–¥ –≤ Program.cs.

–ó–∞–ø—É—Å—Ç
